doctype html
html
    head
        title ColourBoard
    body
        style.
            body {
                background: #{currentlyLoggedInColour};
            }
        center
            div(style={width: '50%', background:'white'})
                canvas#myChart
                p.
                    Login #[a( href='http://colourboard.aidanof.com/login' ) here].
                br
        block specific-js
            //TODO: don't use remote Chart.js
            script(type='text/javascript', src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js")
            script(type='text/javascript').
                // generate the scores and names from the given playerList data
                let playerColours = Object.keys(!{playerList}.players);
                let scoreArray = [];  // TODO: shouldn't need to make this but playerScores is not a real array =/

                let playerScores = playerColours.map(function(playerColour) {
                    let currentPlayer = !{playerList}.players[playerColour];
                    let score =  currentPlayer._score;
                    // add the time-until-now to the currently logged in user
                    if(currentPlayer.currentlyLoggedIn)
                    {
                        let now = new Date();
                        let lastLogin = Date.parse(currentPlayer.logins[currentPlayer.logins.length - 1].login);
                        score += (now - lastLogin)
                    }
                    score = score / 1000 / 3600 / 24;  // ms->sec->hr->days
                    scoreArray.push(score)
                    return score
                });

                // Filter to the top 5 scores
                let fifthBestScore = -100;
                if(scoreArray.length > 5)
                {
                    scoreArray.sort();
                    fifthBestScore = scoreArray[scoreArray.length - 6];
                }
                let filteredPlayerColours = playerColours.filter(function(colour, index) {
                    return playerScores[index] > fifthBestScore;
                })
                let filteredPlayerScores = playerScores.filter(function(playerScore) {
                    return playerScore > fifthBestScore;
                })
                let playerNames = filteredPlayerColours.map(function (playerColour) {
                    return !{playerList}.players[playerColour].username;
                });

                window.onload = function() {
                    let ctx = document.getElementById("myChart").getContext("2d");
                    let myNewChart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: playerNames,
                            datasets: [
                                {
                                    label: "ColourPals",
                                    backgroundColor: filteredPlayerColours,
                                    data: filteredPlayerScores
                                }
                            ]
                        },
                        options: {
                            scales: {
                                yAxes: [{
                                    display: true,
                                    ticks: {
                                        beginAtZero: true
                                    },
                                    scaleLabel: {
                                        display: true,
                                        labelString: 'Logged time [days]'
                                    }
                                }]
                            }
                        }
                    });
                }